# =======================================================================
#  Elastic Beanstalk â€“ Spring Boot Application Configuration
# =======================================================================

option_settings:
  aws:elasticbeanstalk:application:environment:
    SERVER_PORT: 8080
    SPRING_PROFILES_ACTIVE: prod

  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /static: static

files:
  "/etc/httpd/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      <VirtualHost *:80>
        ProxyPreserveHost on
        ProxyPass / http://localhost:8080/
        ProxyPassReverse / http://localhost:8080/
      </VirtualHost>

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/01_configure_application.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # Set proper permissions for the application
      chmod 755 /var/app/current/application.jar
      
      # Create a systemd service for the application
      cat > /etc/systemd/system/spring-boot-app.service << 'EOF'
      [Unit]
      Description=Spring Boot Application
      After=syslog.target network.target

      [Service]
      User=webapp
      ExecStart=/usr/bin/java -jar /var/app/current/application.jar
      SuccessExitStatus=143
      Restart=always
      RestartSec=5
      StandardOutput=syslog
      StandardError=syslog
      SyslogIdentifier=spring-boot-app

      [Install]
      WantedBy=multi-user.target
      EOF

      # Enable and start the service
      systemctl enable spring-boot-app
      systemctl start spring-boot-app

container_commands:
  01_stop_existing:
    command: "systemctl stop spring-boot-app || true"
    leader_only: true

  02_restart_service:
    command: "systemctl restart spring-boot-app"
    leader_only: true

  03_reload_apache:
    command: "service httpd reload"
    leader_only: true 