# =======================================================================
#  Elastic Beanstalk – Tomcat 17 – Apache front proxy
#  Consolidated runtime, CORS, proxy timeouts and Flyway/Liquibase migrate
# =======================================================================

option_settings:
  aws:elasticbeanstalk:application:environment:
    SPRING_PROFILES_ACTIVE : prod
    JAVA_HOME              : /usr/lib/jvm/java-17-amazon-corretto
    MAIL_USERNAME          : ${MAIL_USERNAME}
    MAIL_PASSWORD          : ${MAIL_PASSWORD}
    OPENAI_API_KEY         : ${OPENAI_API_KEY}
    OPENAI_ASSISTANT_ID    : ${OPENAI_ASSISTANT_ID}

  aws:elasticbeanstalk:container:tomcat:jvmoptions:
    Xms: 512m
    Xmx: 1024m

# -----------------------------------------------------------------------
#  Apache HTTPD tuning (proxy + CORS)
# -----------------------------------------------------------------------
files:
  "/etc/httpd/conf.d/10-proxy-timeouts.conf":
    owner : root
    group : root
    mode  : "000644"
    content: |
      # 20 MB payload limit
      LimitRequestBody 20971520
      # End-to-end timeouts for long-running API calls
      Timeout      300
      ProxyTimeout 300

  "/etc/httpd/conf.d/20-cors.conf":
    owner : root
    group : root
    mode  : "000644"
    content: |
      <IfModule mod_headers.c>
          Header always set Access-Control-Allow-Origin  "${ALLOWED_ORIGINS}"
          Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
          Header always set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
          Header always set Access-Control-Allow-Credentials "true"
      </IfModule>

      # Respond immediately to CORS preflight
      <IfModule mod_rewrite.c>
          RewriteEngine On
          RewriteCond %{REQUEST_METHOD} =OPTIONS
          RewriteRule ^(.*)$ $1 [R=204,L]
      </IfModule>

# -----------------------------------------------------------------------
#  Lifecycle commands
# -----------------------------------------------------------------------
container_commands:
  01_reload_httpd:
    command    : "service httpd reload"
    leader_only: true         # run once per deployment

  02_migrate:
    command: >
      java -jar application.jar
      --spring.datasource.url=jdbc:postgresql://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
      --spring.datasource.username=${RDS_USERNAME}
      --spring.datasource.password=${RDS_PASSWORD}
      --spring.profiles.active=prod
      --spring.jpa.hibernate.ddl-auto=update
    leader_only: true
