option_settings:
  aws:elasticbeanstalk:application:environment:
    SPRING_PROFILES_ACTIVE: prod
    JAVA_HOME: /usr/lib/jvm/java-21-amazon-corretto
    MAIL_USERNAME: ${MAIL_USERNAME}
    MAIL_PASSWORD: ${MAIL_PASSWORD}
    OPENAI_API_KEY: ${OPENAI_API_KEY}
    OPENAI_ASSISTANT_ID: ${OPENAI_ASSISTANT_ID}
  aws:elasticbeanstalk:container:tomcat:jvmoptions:
    Xms: 512m
    Xmx: 1024m

files:
  "/etc/nginx/conf.d/proxy.conf":
    content: |
      client_max_body_size 20M;
      proxy_connect_timeout 300s;
      proxy_send_timeout    300s;
      proxy_read_timeout    300s;

  "/etc/nginx/conf.d/cors.conf":
    content: |
      add_header 'Access-Control-Allow-Origin' '${ALLOWED_ORIGINS}' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '${ALLOWED_ORIGINS}' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
      }

container_commands:
  01_reload_nginx:
    command: "service nginx reload"
  02_migrate:
    command: >
      java -jar application.jar
      --spring.datasource.url=jdbc:postgresql://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
      --spring.datasource.username=${RDS_USERNAME}
      --spring.datasource.password=${RDS_PASSWORD}
      --spring.profiles.active=prod
      --spring.jpa.hibernate.ddl-auto=update
    leader_only: true
